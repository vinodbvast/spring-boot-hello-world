pipeline {
    agent any
    stages {
        stage('Checkout') {
            steps {
                script {
                    // Configure Git behavior
                    checkout([$class: 'GitSCM', 
                      branches: [[name: '*/dev']],
                      doGenerateSubmoduleConfigurations: false,
                      extensions: [
                        [$class: 'hudson.plugins.git.extensions.impl.AdvancedCloneOption', 
                          shallow: false, 
                          noTags: false, 
                          reference: '', 
                          timeout: 10,
                          honorRefspec: true, 
                          refspec: '+refs/heads/dev:refs/remotes/origin/dev', 
                          depth: 1
                        ]
                      ],
                      userRemoteConfigs: [[
                        credentialsId: 'vinodbvast', // Specify your Git credentials ID
                        url: 'https://github.com/vinodbvast/spring-boot-hello-world.git'
                      ]]
                    ])
                }
            }
        }
        stage('Tag Artifact') {
            steps {
                script {
                    // Create a tag with the build version
                    def version = "${BUILD_NUMBER}"
                    sh "git tag -a v${version} -m 'Tagging for build ${version}'"
                    sh "git push origin v${version}"
                }
            }
        }
    }
    post {
        success {
            emailext (
                to: 'vinodb@valueaddsofttech.com',
                subject: "Build Succeeded for ${currentBuild.fullDisplayName}",
                body: "The build succeeded."
            )
        }
        failure {
            emailext (
                to: 'vinodb@valueaddsofttech.com',
                subject: "Build Failed for ${currentBuild.fullDisplayName}",
                body: "The build failed. Please investigate."
            )
        }
    }
}
