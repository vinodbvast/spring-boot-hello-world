pipeline {
    agent any
    stages {
        stage('Checkout') {
            steps {
                script {
                    checkout([$class: 'GitSCM', 
                      branches: [[name: 'dev']],
                      userRemoteConfigs: [[
                        credentialsId: 'vinodbvast',
                        url: 'https://github.com/vinodbvast/spring-boot-hello-world.git'
                      ]]
                    ])
                }
            }
        }
        stage('Configure Git') {
            steps {
                script {
                    dir('/home/lab001/.jenkins/workspace/Dev/Tag_and_notify_failure') {
                        sh "git config user.email 'vinodb@valueaddsofttech.com'"
                        sh "git config user.name 'vinodbvast'"
                    }
                }
            }
        }
        stage('Build') {
            steps {
                sh 'mvn clean package' 
            }
        }
        stage('Tag Artifact') {
            when {
                expression { currentBuild.resultIsBetterOrEqualTo('SUCCESS') }
            }
            steps {
                script {
                    def version = "${BUILD_NUMBER}"
                    withCredentials([gitUsernamePassword(credentialsId: 'vinodbvast', gitToolName: 'Default')]) {
                        sh "git tag -a v${version} -m 'Tagging for build ${version}'"
                        sh "git push origin v${version}"
                    }
                }
            }
        }
    }
    post {
        success {
            emailext (
                to: 'vinodb@valueaddsofttech.com',
                subject: "Build Succeeded for ${currentBuild.fullDisplayName}",
                body: "The build succeeded."
            )
        }
        failure {
            emailext (
                to: 'vinodb@valueaddsofttech.com',
                subject: "Build Failed for ${currentBuild.fullDisplayName}",
                body: "The build failed. Please investigate."
            )
        }
    }
}
